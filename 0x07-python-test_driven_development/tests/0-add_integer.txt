The ``0-add_integer`` module
============================

Using ``add_integer``
----------------------------

First import ``add_integer`` from the ``0-add_integer`` module:

>>> add_integer = __import__('0-add_integer').add_integer

Now use it:

>>> add_integer(1, 2)
3

>>> add_integer(1.0, 2.1)
3

>>> add_integer(1, 2.2)
3

>>> add_integer(2.2, 1)
3

>>> add_integer(0)
98

>>> add_integer(45, 24)
69

>>> add_integer(1)
99

>>> add_integer(.1)
98

>>> add_integer(-1, 1)
0



""" ERRORS """

# Pass in not int, a string
>>> add_integer("astring", 2)
Traceback (most recent call last):
...
TypeError: a must be an integer


# Pass in not int, a string
>>> add_integer(2, "astring")
Traceback (most recent call last):
...
TypeError: b must be an integer


# Pass in not int, a string
>>> add_integer("string", "astring")
Traceback (most recent call last):
...
TypeError: a must be an integer


# Pass in not int, a list
>>> add_integer([1, 2], 1)
Traceback (most recent call last):
...
TypeError: a must be an integer


# Pass in not int, a list
>>> add_integer(1, [1, 2])
Traceback (most recent call last):
...
TypeError: b must be an integer


# Pass in not int, a list
>>> add_integer([1, 2], [1, 2])
Traceback (most recent call last):
...
TypeError: a must be an integer


# Pass in nothing
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'


# Converting float infinity to int errors 
>>> add_integer(float('inf'), 2)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer


# Converting float NaN to int errors
>>> add_integer(float('NaN'), 2)
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
